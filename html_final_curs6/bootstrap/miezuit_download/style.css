.navbar { background:#F97300; }
.nav-link, .navbar-brand { color: #f4f4f4; cursor: pointer; }
.nav-link { margin-right: 1em; }
.nav-link:hover { background: #f4f4f4; color: #f97300; }
.header{
     height: 100vh;
     background-image: url('images/headerback.jpg');
     background-attachment: fixed;
     background-size: cover;
     background-position: center;

}
.overlay {
     position: absolute;
     min-height: 100%;
     min-width: 100%;
     left: 0;
     top: 0;
     background: rgba(244, 244, 244, 0.79);
}

Learn Bootstrap 4 in 30 minutes by building a landing page website
Go to the profile of SaidHayani@
SaidHayani@
Feb 17
from templatetoaster
A guide for beginners
“Bootstrap is a free, open-source front-end library for designing websites and web applications. It contains HTML- and CSS-based design templates for everything from typography, forms, buttons, navigation and other interface components as well as JavaScript extensions. Unlike many other web frameworks, Bootstrap concerns itself with front-end development only.” — Wikipedia
Hi, before we start check out my full class to learn Bootstrap 4 ,where you will learn new features of bootstrap and how to use them to build better user experiences .
There are many versions of Bootstrap with version 4 being the latest. In this article we are going to build a website using Bootstrap 4.

Prerequisites
Before starting, there are some skills you’ll have to know in order to learn and use the Bootstrap framework:

HTML fundamentals
basic knowledge of CSS
and some basic JQuery
Table of Contents
We will cover the topics below while building the website:

Downloading and installing Bootstrap 4
The new features of Bootstrap 4
Bootstrap Grid system
Navbar
Header
Buttons
About Section
Portfolio Section
Blog Section
Cards
Team Section
Contact Form
Fonts
Scroll Effect
Wrap-up and Conclusion
Downloading and installing Bootstrap 4
There are three ways to install and include Bootstrap 4 for your project:

Use npm
You can install Bootstrap 4 by running this command npm install bootstrap

2. Use a Content Delivery Network (CDN)

By including this link in your project between head tags:

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
3. Download the Bootstrap 4 library and use it locally.

The structure of our project should look like this:


The new features of Bootstrap 4
What’s new in Bootstrap 4? And what’s different between Bootstrap 3 and 4?

Bootstrap 4 now comes with some awesome features that didn’t exist in the last version:

Bootstrap 4 is written using Flexbox Grid, whereas Bootstrap 3 was written using the float method.
If you’re new to Flexbox then check out this tutorial.
Bootstrap 4 uses rem CSS units whereas Bootstrap 3 uses px.
See how these two units differ.
Panels, thumbnails and wells have been dropped entirely.
You can read in detail more about the global changes and removed features of Bootstrap 4 here.
Without jumping too deep into detail here, let’s move on to some other important things.

The Bootstrap Grid system
The Bootstrap Grid system helps you to create your layout and easily build a responsive website. There have not been any changes in the class names, except the .xs class, which no longer exists in Bootstrap 4.

The grid is divided into 12 columns, so your layout will be based on this.

To use the grid system you’ll have to add a .row class to the main div.

col-lg-2 // class used for large devices like laptops
col-md-2 // class used for medium devices like tablets
col-sm-2// class used for small devices like mobile phones
Navbar

The navbar wrapper is pretty cool in Bootstrap 4. It’s so helpful when it comes to building a responsive navbar.

To get it, we are going to add the navbar class to our index.html file:

<!-- navbar -->
 <nav class="navbar navbar-expand-lg fixed-top ">
 <a class="navbar-brand" href="#">Home</a>
<button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
 <span class="navbar-toggler-icon"></span>
</button>
<div class="collapse navbar-collapse " id="navbarSupportedContent">     <ul class="navbar-nav mr-4">
 <li class="nav-item">
     <a class="nav-link" data-value="about" href="#">About</a>        </li>
<li class="nav-item">
    <a class="nav-link " data-value="portfolio"href="#">Portfolio</a>
 </li>
 <li class="nav-item">
    <a class="nav-link " data-value="blog" href="#">Blog</a>         </li>
<li class="nav-item">
   <a class="nav-link " data-value="team" href="#">         Team</a>       </li>
<li class="nav-item">
 <a class="nav-link " data-value="contact" href="#">Contact</a>       </li>
</ul>
</div></nav>
Create and include a main.css file so that you can customize the CSS style.

Put this within the head tag in your index.html file:

<link rel="stylesheet" type="text/css" href="css/main.css">
Let’s add some colors to our navbar:

.navbar{ background:#F97300;}
.nav-link , .navbar-brand{ color: #f4f4f4; cursor: pointer;}
.nav-link{ margin-right: 1em !important;}
.nav-link:hover{ background: #f4f4f4; color: #f97300; }
.navbar-collapse{ justify-content: flex-end;}
.navbar-toggler{  background:#fff !important;}
The new Bootstrap Grid is built with the Flexbox system, so for alignment you have to use a Flexbox property. For example, to place the navbar menu on the right we need to add a justify-content property and set it to flex-end.

.navbar-collapse{
 justify-content: flex-end;
}
Add the .fixed-top class to the navbar to give it a fixed position.

To make the navbar background color light, add .bg-light. For a dark background, add .bg-dark, and for a light blue background, add
.bg-primary.

Here’s how that should look:

.bg-dark{
background-color:#343a40!important
}
.bg-primary{
background-color:#007bff!important
}
Header
<header class="header">

</header>
Let’s try and create a layout for the header.

Here, we want to make sure the header takes up the window’s height so we are going to use a little JQuery code.

First create a file named main.js and include it in the index.html file before the closing body tag:

<script type="text/javascript" src='js/main.js'></script>
In the main.js file insert this a little code of JQuery:

$(document).ready(function(){
 $('.header').height($(window).height());
})
It’d be pretty cool if we set a nice background image to the header:

/*header style*/
.header{
 background-image: url('../images/headerback.jpg');
 background-attachment: fixed;
 background-size: cover;
 background-position: center;
}

.overlay{
 position: absolute;
 min-height: 100%;
 min-width: 100%;
 left: 0;
 top: 0;
 background: rgba(244, 244, 244, 0.79);
}
.description {
    position: absolute;
    top: 30%;
    margin: auto;
    margin-left: 0px;
    padding: 2em;
}
.description h1 {
 color: #F97300;
}
.description p {
 color: #666;
 font-size: 20px;
 width: 50%;
 line-height: 1.5;
}
.description button {
 border: 1px solid #F97300;
 background: #F97300;
 color: #fff;
}
.about{
	margin: 4em 0;
	padding: 1em;
	position: relative;
}
.about h1{
	color:#F97300;
	margin: 2em;
}
.about img{
	height: 100%;
    width: 100%;
    border-radius: 50%
}
.about span{
	display: block;
	color: #888;
	position: absolute;
	left: 115px;
}
.about .desc{
	padding: 2em;
	border-left:4px solid #10828C;
}
.about .desc h3{
	color: #10828C;
}
.about .desc p{
	line-height:2;
	color:#888;
}
.portfolio{
	margin: 4em 0;
    position: relative;
}
.portfolio h1{
	color:#F97300;
	margin: 2em;
}
.portfolio img{
	 height: 15rem;
	 width: 100%;
	 margin: 1em;
}
.team{
	margin: 4em 0;
	position: relative;

}
.team h1{
	color:#F97300;
	margin: 2em;
}
.team .item{
	position: relative;
	overflow: hidden;
}
.team .des{
	background: #F97300;
	color: #fff;
	text-align: center;
	border-top-right-radius: 93%;
	transition:.3s ease-in-out;
	position: absolute;
	width: 88%;
	bottom: 24px;


}
.team .item:hover .des{
	height: 100%;
	background:#f973007d;
    position: absolute;
	width: 89%;
	padding: 5em;
	top: 0;
	border-top-right-radius: 0;
}
.contact-form{
	margin: 6em 0;
	position: relative;
}
.contact-form h1{
	padding:2em 1px;
	color: #F97300;
}
.contact-form .right{
	max-width: 600px;
}
.contact-form .right .btn-secondary{
	background:  #F97300;
	color: #fff;
	border:0;
}
